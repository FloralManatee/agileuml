package stringlib { 


  class StringLib {

    stereotype component; 
    stereotype external; 

    static query leftTrim(s: String) : String
    pre: true
    post: result = s.subrange(s->indexOf(s->trim())); 

    static query rightTrim(s: String) : String
    pre: true
    post: result = s->before(s->trim()) + s->trim();

    static query padLeftWithInto(s : String, c : String, n : int) : String
    pre: true
    post: result = Integer.subrange(1,n - s->size())->collect(c)->sum() + s; 

    static query leftAlignInto(s : String, n : int) : String
    pre: true 
    post: 
      (n <= s->size() => result = s.subrange(1,n)) & 
      (n > s->size() => result = s + Integer.subrange(1, n - s->size())->collect(" ")->sum()); 

    static query rightAlignInto(s : String, n : int) : String
    pre: true 
    post: 
      (n <= s->size() => result = s.subrange(1,n)) & 
      (n > s->size() => result = Integer.subrange(1, n - s->size())->collect(" ")->sum() + s); 

    static query format(fmt: String, sq: Sequence(OclAny)) : String
    pre: true post: true; 

    static query scan(s: String, fmt: String) : Sequence(OclAny)
    pre: true post: true; 
  }


}


